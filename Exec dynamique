package com.example.demo.service;

import com.example.demo.enums.DatabaseType;
import jakarta.sql.DataSource;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Service;

import java.util.EnumMap;
import java.util.List;
import java.util.Map;

@Service
public class DynamicDataSourceService {

    private final Map<DatabaseType, DataSource> dataSources = new EnumMap<>(DatabaseType.class);

    public DynamicDataSourceService(
            @Qualifier("mainDataSource") DataSource main,
            @Qualifier("paymentDataSource") DataSource payment,
            @Qualifier("securitiesDataSource") DataSource securities) {

        dataSources.put(DatabaseType.MAIN, main);
        dataSources.put(DatabaseType.PAYMENT, payment);
        dataSources.put(DatabaseType.SECURITIES, securities);
    }

    /**
     * Returns a JdbcTemplate bound to the given database type
     */
    public JdbcTemplate getJdbcTemplate(DatabaseType dbType) {
        DataSource ds = dataSources.get(dbType);
        if (ds == null) {
            throw new IllegalArgumentException("Unknown database: " + dbType);
        }
        return new JdbcTemplate(ds);
    }

    /**
     * Optional: list all available databases configured
     */
